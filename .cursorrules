# Ambulance App Development Guide

## Project Overview
Build an Uber-like ambulance booking app with the following tech stack:
- **Frontend**: React Native with Expo Router
- **Styling**: NativeWind (Tailwind CSS)
- **State Management**: Zustand
- **Backend**: Firebase (Auth + Database)
- **Package Manager**: pnpm

## App Flow
Splash → Login/Signup → Map (Source) → Select Hospital → Search Driver → Connect & Ride → Complete → Receipt

## Project Structure
```
app/
├── (auth)/
│   ├── phone-input.tsx
│   ├── otp-verify.tsx
│   └── profile-setup.tsx
├── (tabs)/
│   ├── map.tsx
│   ├── profile.tsx
│   └── history.tsx
├── select-hospital.tsx
├── search-driver.tsx
├── active-ride.tsx
└── _layout.tsx

components/
├── ui/
│   ├── Input.tsx
│   ├── PhoneInput.tsx
│   ├── OTPInput.tsx
│   ├── Button.tsx
│   ├── FloatingButton.tsx
│   ├── Card.tsx
│   ├── HospitalCard.tsx
│   └── DriverCard.tsx
└── map/
    ├── MapView.tsx
    ├── LocationMarker.tsx
    └── RouteOverlay.tsx

store/
├── authStore.ts
├── locationStore.ts
└── bookingStore.ts

utils/
└── firebase.ts

## Design System

### Color Palette
```javascript
const colors = {
  primary: '#DC2626',    // Red for emergency
  secondary: '#059669',  // Green for success
  accent: '#2563EB',     // Blue for info
  background: '#FFFFFF',
  surface: '#F9FAFB',
  text: '#111827',
  textSecondary: '#6B7280',
  border: '#E5E7EB',
  error: '#EF4444',
  warning: '#F59E0B'
}
```

### Typography
- Headers: Inter Bold (24px, 20px, 18px)
- Body: Inter Regular (16px, 14px)
- Captions: Inter Medium (12px, 10px)

### Spacing Scale
- xs: 4px
- sm: 8px
- md: 16px
- lg: 24px
- xl: 32px
- 2xl: 48px

## Database Schema

### Profiles Table
```sql
CREATE TABLE profiles (
  id UUID REFERENCES auth.users(id) PRIMARY KEY,
  phone VARCHAR(15) UNIQUE NOT NULL,
  full_name VARCHAR(100),
  user_type VARCHAR(20) DEFAULT 'patient',
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);
```

### Hospitals Table
```sql
CREATE TABLE hospitals (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  address TEXT NOT NULL,
  latitude DECIMAL(10, 8) NOT NULL,
  longitude DECIMAL(11, 8) NOT NULL,
  phone VARCHAR(15),
  emergency_contact VARCHAR(15),
  specialties TEXT[],
  created_at TIMESTAMP DEFAULT NOW()
);
```

### Drivers Table
```sql
CREATE TABLE drivers (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID REFERENCES profiles(id),
  license_number VARCHAR(50) UNIQUE NOT NULL,
  vehicle_type VARCHAR(20) DEFAULT 'ambulance',
  vehicle_number VARCHAR(20) NOT NULL,
  is_available BOOLEAN DEFAULT true,
  current_latitude DECIMAL(10, 8),
  current_longitude DECIMAL(11, 8),
  rating DECIMAL(3, 2) DEFAULT 5.0,
  created_at TIMESTAMP DEFAULT NOW()
);
```

### Bookings Table
```sql
CREATE TABLE bookings (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  patient_id UUID REFERENCES profiles(id),
  driver_id UUID REFERENCES drivers(id),
  hospital_id UUID REFERENCES hospitals(id),
  pickup_address TEXT NOT NULL,
  pickup_latitude DECIMAL(10, 8) NOT NULL,
  pickup_longitude DECIMAL(11, 8) NOT NULL,
  status VARCHAR(20) DEFAULT 'searching',
  emergency_type VARCHAR(50),
  patient_condition TEXT,
  estimated_fare DECIMAL(8, 2),
  actual_fare DECIMAL(8, 2),
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);
``` 
